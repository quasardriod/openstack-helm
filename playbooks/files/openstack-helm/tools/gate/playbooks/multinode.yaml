# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

- hosts: primary
  vars:
    osh_params:
      openstack_release: xena
      container_distro_name: ubuntu
      container_distro_version: focal
      feature_gates: ""
    zuul_osh_relative_path: /opt/openstack-helm
    run_task: true
    mariadb_replica: 1
    storage_type: nfs

  vars_files:
    - vars.yaml
  tasks:
    - name: Setup OS and K8s Clients
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/010-setup-client.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"
      when: run_task|bool

    - name: Deploy Ingress
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/020-ingress.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"
      when: run_task|bool

    - name: Start systemd-resolved
      systemd:
        name: systemd-resolved
        state: started
      become: true

    - name: Copy /run/systemd/resolve/resolv.conf to /etc/resolv.conf
      shell: cp --remove-destination /run/systemd/resolve/resolv.conf /etc/resolv.conf
      become: true

    - name: Update /etc/resolv.conf with code-dns IP
      lineinfile:
        path: /etc/resolv.conf
        regexp: '^nameserver\s10.96.0.10$'
        line: 'nameserver 10.96.0.10'
        state: present
      become: true

    - name: Update /etc/resolv.conf with cluster search
      lineinfile:
        path: /etc/resolv.conf
        regexp: '^search\sopenstack'
        line: 'search openstack.svc.cluster.local svc.cluster.local cluster.local'
        state: present
      become: true

    - name: Stop and disable systemd-resolved
      systemd:
        name: systemd-resolved
        state: stopped
        enabled: no
      become: true

    - name: Deploy MariaDB
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        echo "REPLICA: {{mariadb_replica}}" > /tmp/test
        REPLICA={{mariadb_replica}} ./tools/deployment/multinode/050-mariadb.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    - name: Deploy RabbitMQ
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/060-rabbitmq.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    - name: Deploy Memcache
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/070-memcached.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    - name: Deploy Keystone
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/080-keystone.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    - name: Deploy NFS
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/045-nfs-provisioner.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"
      when: storage_type == "nfs"

    - name: Deploy Glance
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/100-glance.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    - name: Deploy Heat
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/150-heat.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    - name: Deploy OpenvSwitch
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/120-openvswitch.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    - name: Deploy Libvirt
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/130-libvirt.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    - name: Deploy ComputeKit
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/140-compute-kit.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"
    - name: Deploy Horizon
      environment: "{{ multinode_env }}"
      shell: |
        set -xe;
        ./tools/deployment/multinode/085-horizon.sh
      args:
        chdir: "{{ zuul_osh_relative_path }}"

    # - name: Exercise the Cloud
    #  environment: "{{ multinode_env }}"
    #  shell: |
    #    set -xe;
    #    ./tools/deployment/multinode/900-use-it.sh
    #  args:
    #    chdir: "{{ zuul_osh_relative_path }}"
