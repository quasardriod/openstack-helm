---

- hosts: all
  gather_facts: true
  become: true
  any_errors_fatal: true

  tasks:
  - block:

    - name: Create /etc/apt/keyrings
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755
        owner: root
        group: root
    
    - name: Get stat of /etc/apt/keyrings/docker.gpg
      stat:
        path: /etc/apt/keyrings/docker.gpg
      register: _docker_gpg

    - name: Install Docker GPG key
      shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /etc/apt/keyrings/docker.gpg
      when: not _docker_gpg.stat.exists

    - name: Setup docker reposiroty
      shell: |
        echo  "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.gpg] https://download.docker.com/linux/ubuntu \
        $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Remove existing packages
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - docker-ce-rootless-extras
          - docker-scan-plugin
          - docker.io
        state: absent
        autoremove: yes
      
    - name: Install docker packages
      apt:
        name:
          - docker.io
          - containerd 
        autoremove: yes
        update_cache: yes
        state: latest
    when: node_type == "worker"

  - name: swapoff
    command: swapoff -a
    when: node_type == "worker"

  - name: Fetch files from master
    fetch:
      src: "{{item}}"
      dest: /tmp/
      flat: yes
    with_items:
      - /etc/docker/daemon.json
    when: node_type == "master"
    run_once: true

  - name: Copy docker daemon json on worker nodes
    copy:
      src: /tmp/daemon.json
      dest: /etc/docker/
      mode: 0644
      owner: root
      group: root
    when: node_type == "worker"

  - name: Get enable kubeadm repo from master
    shell: apt list -a kubeadm|awk '/now/{print $2}'
    register: _kadm_repo
    when: node_type == "master"
    run_once: true

  - debug:
      var: _kadm_repo.stdout
    when: node_type == "master"
    run_once: true
   
  - name: Install kube packages on worker nodes
    apt: 
      name:
        - "{{item}}={{_kadm_repo.stdout}}"
      state: present
      update_cache: yes
      allow_downgrade: yes
    with_items:
      - kubeadm
      - kubelet
    when: node_type == "worker"
    
  - name: Generate token
    shell: 'kubeadm token create --print-join-command'
    register: _kadm_token
    when: node_type == "master"
    run_once: true

  - debug:
      var: _kadm_token.stdout
    when: node_type == "master"
    run_once: true

  - name: Cleanup existing files
    file:
      path: /etc/kubernetes
      state: absent
    when: node_type == "worker"

  - name: Stop kubelet
    systemd:
      name: kubelet
      state: stopped
    when: node_type == "worker"
    
  - name: Run kubeadm join on worker node
    shell: '{{_kadm_token.stdout}}'
    when: node_type == "worker"

  - name: Check Ready status of new added node
    shell: kubectl get nodes |egrep {{inventory_hostname}}|egrep Ready
    register: _node_ready
    retries: 5
    delay: 10
    until: _node_ready.rc == 0
    when: node_type == "worker"

  - name: Set Worker nodes label to worker
    shell: kubectl label node {{inventory_hostname}} node-role.kubernetes.io/worker=worker
    when: node_type == "worker"
