---

- hosts: all
  gather_facts: true
  become: true
  
  vars:
    osh_repos:
      - name: infra
        repo: "https://opendev.org/openstack/openstack-helm-infra.git"
        dest: /opt/openstack-helm-infra
      - name: component
        repo: "https://opendev.org/openstack/openstack-helm.git"
        dest: /opt/openstack-helm
    virt_type: kvm
    k8s_nodes_list_file: /tmp/k8s-nodes-list.yml
    multinode_deployment: false
    ssh_key_pair: "osh_keys"

  pre_tasks:
  - assert:
      that:
        - ansible_distribution == "Ubuntu" 
        - ansible_distribution_version == "20.04"
        - ansible_user == "ubuntu"

  tasks:
  - name: Generate ssh keypair on localhost for OSH
    openssh_keypair:
        path: "/tmp/{{ssh_key_pair}}"
        type: rsa
        size: 4096
        state: present
        force: no
    delegate_to: localhost
    become: false
    run_once: true
  
  - name: Copy private key on master node
    copy:
      src: "/tmp/{{ssh_key_pair}}"
      dest: "/home/{{ansible_user}}/.ssh/id_rsa"
      mode: 0600
      owner: "{{ansible_user}}"
      group: "{{ansible_user}}"
    become: false
    when: node_type == "master"

  - name: Copy public key on master node
    copy:
      src: "/tmp/{{ssh_key_pair}}.pub"
      dest: "/home/{{ansible_user}}/.ssh/id_rsa.pub"
      mode: 0644
      owner: "{{ansible_user}}"
      group: "{{ansible_user}}"
    become: false
    when: node_type == "master"

  - name: Install public key on worker nodes
    authorized_key:
      user: "{{ansible_user}}"
      state: present
      key: "{{lookup('file', '/tmp/{{ssh_key_pair}}.pub')}}"
    become: false

  - name: Create /etc/openstack-helm
    file:
      path: /etc/openstack-helm
      state: directory

  - name: Copy private key in /etc/openstack-helm
    copy:
      src: "/tmp/{{ssh_key_pair}}"
      dest: /etc/openstack-helm/deploy-key.pem
      owner: "{{ansible_user}}"
      mode: 0600
      
  - name: Install google cloud public signing key
    shell: curl -fsSLo /usr/share/keyrings/kubernetes-archive-keyring.gpg https://packages.cloud.google.com/apt/doc/apt-key.gpg

  - name: Add kubernetes apt key
    shell: echo "deb [signed-by=/usr/share/keyrings/kubernetes-archive-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main" | tee /etc/apt/sources.list.d/kubernetes.list

  - name: Enable br_netfilter on reboot
    lineinfile:
      path: '/etc/modules-load.d/br_netfilter.conf'
      line: 'br_netfilter'
      state: present
      create: yes
  
  - name: Enable br_netfilter on runtime
    shell: modprobe br_netfilter

  - name: Set /opt ownership to {{ansible_user}}
    file:
      path: /opt
      owner: "{{ansible_user}}"
      recurse: yes

  - name: Delete existing cloned repo
    file:
      path: "{{item.dest}}"
      state: absent
    with_items: "{{osh_repos}}"
    
  - name: clone openstack helm code
    shell: git clone {{item.repo}} {{item.dest}}
    with_items: "{{osh_repos}}"
    register: _clone
    retries: 3
    delay: 5
    until: _clone is success
    become: false

  - name: Set hostname
    hostname:
      name: "{{inventory_hostname}}"
      use: systemd

  - name: Remove {{k8s_nodes_list_file}} from localhost
    file:
      path: "{{k8s_nodes_list_file}}"
      state: absent
    delegate_to: localhost
    become: false
    run_once: true

  - name: Create {{k8s_nodes_list_file}} on localhost
    lineinfile:
      path: "{{k8s_nodes_list_file}}"
      line: 'k8s_nodes_list:'
      state: present
      create: yes
    delegate_to: localhost
    become: false
    run_once: true

  - name: Append hosts in {{k8s_nodes_list_file}} on localhost
    shell: |
      echo "  - host: {{inventory_hostname}}" >> {{k8s_nodes_list_file}}
      echo "    ipaddr: {{ansible_host}}" >> {{k8s_nodes_list_file}}
      echo "    node_type: {{node_type}}" >> {{k8s_nodes_list_file}}
    delegate_to: localhost
    become: false
    
  - name: Load vars from {{k8s_nodes_list_file}}
    include_vars:
      file: "{{k8s_nodes_list_file}}"

  - name: Template out inventory for kubenodes setup
    template:
      src: multinode-inventory.j2
      dest: /opt/openstack-helm-infra/tools/gate/devel/multinode-inventory.yaml
    become: false

  - name: Update /etc/hosts file
    lineinfile:
      path: /etc/hosts
      line: '{{item.ipaddr}} {{item.host}}'
      state: present
    with_items: "{{k8s_nodes_list}}"

  - name: default net interface
    shell: ip -4 route list 0/0 | awk '{ print $5; exit }'
    register: _default_iface
  
  - name: Add kubernetes_network_default_device var in multinode vars file
    lineinfile:
      path: /opt/openstack-helm-infra/tools/gate/devel/multinode-vars.yaml
      regexp: '^kubernetes_network_default_device'
      line: 'kubernetes_network_default_device: {{_default_iface.stdout}}'
      state: present

  - name: Update openstack-helm-infra/tools/gate/devel/start.sh to start kubeadm based installation
    shell: sed -i -e 's/deploy-k8s/deploy-k8s-kubeadm/g' tools/gate/devel/start.sh
    args:
      chdir: /opt/openstack-helm-infra
    when: multinode_deployment|bool
